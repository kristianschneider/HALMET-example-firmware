; PlatformIO Project Configuration File
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = halmet

[env]

upload_speed = 2000000
monitor_speed = 115200

lib_deps =
	SignalK/SensESP@3.1.0
	adafruit/Adafruit SSD1306 @ ^2.5.1
	ttlappalainen/NMEA2000-library@4.22.0
	NMEA2000_twai=https://github.com/skarlsson/NMEA2000_twai
	adafruit/Adafruit ADS1X15@^2.3.0
	SensESP/OneWire@^3.0.1

build_flags =
    ; Max (and default) debugging level in Arduino ESP32 Core
    -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_VERBOSE
    ; Use the ESP-IDF logging library - required by SensESP.
    -D USE_ESP_IDF_LOG

board_build.partitions = min_spiffs.csv

;; Uncomment the following lines to use Over-the-air (OTA) Updates
;upload_protocol = espota
;upload_port = IP_ADDRESS_OF_ESP_HERE
;upload_flags =
;  --auth=YOUR_OTA_PASSWORD

; You shouldn't need to touch the settings in this section below this line.

build_unflags =
    -Werror=reorder
monitor_filters = esp32_exception_decoder

test_build_src = true
check_tool = clangtidy
check_flags =
    clangtidy: --fix --format-style=file --config-file=.clang-tidy

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Platform configurations follow

[arduino]

platform = espressif32 @ ^6.9.0
framework = arduino

lib_ignore =
    esp_websocket_client

build_flags =
    ${env.build_flags}
    ; Arduino Core bug workaround: define the log tag for the Arduino
    ; logging macros.
    -D TAG='"Arduino"'

[pioarduino]

platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
framework = arduino

; The library.json format doesn't support dependencies conditional on the
; platform version, so we have to use the lib_deps option to specify the
; esp_websocket_client library only for the ESP-IDF framework.

lib_deps =
    ${env.lib_deps}
    esp_websocket_client=https://components.espressif.com/api/downloads/?object_type=component&object_id=dbc87006-9a4b-45e6-a6ab-b286174cb413

build_flags =
    ${env.build_flags}

[espidf]

platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
framework = espidf, arduino

board_build.embed_txtfiles =
    managed_components/espressif__esp_insights/server_certs/https_server.crt
    managed_components/espressif__esp_rainmaker/server_certs/rmaker_mqtt_server.crt
    managed_components/espressif__esp_rainmaker/server_certs/rmaker_claim_service_server.crt
    managed_components/espressif__esp_rainmaker/server_certs/rmaker_ota_server.crt

; The library.json format doesn't support dependencies conditional on the
; platform version, so we have to use the lib_deps option to specify the
; esp_websocket_client library only for the ESP-IDF framework.

lib_deps =
    ${env.lib_deps}
    esp_websocket_client=https://components.espressif.com/api/downloads/?object_type=component&object_id=dbc87006-9a4b-45e6-a6ab-b286174cb413

build_flags =
    ${env.build_flags}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Board configurations follow

[esp32]

board = esp32dev
build_flags =
    ${env.build_flags}
    -D BUTTON_BUILTIN=0
    -D LED_BUILTIN=2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Permutations of platform and device.

[env:arduino_esp32]

extends = arduino, esp32
build_flags =
    ${arduino.build_flags}
    ${esp32.build_flags}

[env:pioarduino_esp32]

extends = pioarduino, esp32
build_flags =
    ${pioarduino.build_flags}
    ${esp32.build_flags}

[env:espidf_esp32]

extends = espidf, esp32
build_flags =
    ${espidf.build_flags}
    ${esp32.build_flags}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Individual board configurations

[env:halmet]

extends = pioarduino, esp32
board_build.partitions = default_8MB.csv

build_flags =
    ${pioarduino.build_flags}
    ${esp32.build_flags}
